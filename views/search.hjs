<html>
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <!-- Bootstrap CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
        
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Lato&family=PT+Mono&display=swap" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/fuse.js@6.6.2"></script>
        
        <title>TCDSense - search</title>
        <link rel="icon" type="image/x-icon" href="/images/TCDSenseMapFavicon.svg">
        
        <link rel="stylesheet" href="/stylesheets/style.css" />

        <script defer data-domain="yourdomain.com" src="https://plausible.io/js/script.outbound-links.js"></script>


        <style>

            .nav-item {
                background-color: var(--tcdsense-blue-two); 
                color: #000000; 
                border-radius:0.25rem;
                margin: 0.5rem;
                font-weight: bolder; 
                font-family: 'PT Mono', monospace
            }
            body {
                font-family: 'Lato', sans-serif;
                background-color: var(--tcdsense-blue-two); 
            }

            .accordion-button {
                /*background-color: var(--tcdsense-blue-two);*/
                font-family: 'PT Mono', monospace;
                font-weight: bolder; 
            }
            
            .accordion-button:not(.collapsed) {

            }


            #summary {
                
                border-radius: 3pt;
                padding: 1rem;
                
            }


            .list-group-item  {
                
                background-color: var(--background-colour);
            }

            @media (max-width:992px){
                .navbar-nav{
                    margin-left: auto;
                    margin-right: auto;
                    padding-left: auto;
                    padding-right: auto;
                    width: fit-content;
                }
                .nav-item{
                    width: 100%;
                    margin-left: auto;
                    margin-right: auto;
                    padding-left: auto;
                    padding-right: auto;
                }
            }
        </style>
    </head>

    <body>

        <nav class="navbar navbar-expand-lg navbar-light justify-content-center py-3" style="background-color:#0087A2; margin:auto">
            <div class="container-fluid">
                <a class="navbar-brand" href="../">
                    <img width="60" height="60" src="/images/TCDSenseMapLogo.svg" style="vertical-align:bottom; margin-left:1rem; margin-right:1rem;" ></img>
                    <span class="fs-4" style="font-weight: bolder; font-family: 'PT Mono', monospace"><span style="color: #fce891">TCD</span><span style="color: #fff0ad">Sense</span></span>
                </a>
                <button class="navbar-toggler collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse show" id="navbarNav">
                    <ul class="navbar-nav" style="margin-left:auto">
                        <li class="nav-item">
                            <a class="nav-link" href="/">Campus Map</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="../search">Search</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">Report an Issue</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container" style="margin-top:1rem">
            <input class="form-control" type="text" id="searchbar" onkeyup="buildingSearch()" placeholder="Search for a building" aria-label="default input example" style="font-size: 1.5rem;">
        </div>

        <div class="container" style="margin-top:1rem">
            <div class="accordion" id="buildingsList">
                {{#buildings.list}}
                <div class="accordion-item" id="{{bldID}}" data-score="0">
                    {{!-- <div class="row" aria-label="List Item"> --}}
                        <div class="container" style="padding: 0;">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-{{bldID}}" aria-expanded="false" aria-controls="collapse-{{bldID}}">
            
                                <ul class="list-inline" style="margin: 0;">
                                    <li class="list-inline-item"><h4 class="p-1">{{Name}}</li>
                                    <li class="list-inline-item"><small class="text-muted">{{aka}}</small></li>
                                </ul>

                            </button>
                        </div>
                        
                        <div id="collapse-{{bldID}}" class="accordion-collapse collapse show" aria-labelledby="heading-{{bldID}}" data-bs-parent="#buildingsList" >
                            <div class="accordion-body" style="padding-top: 0;">
                                <div class="container p-3">
                                    {{Description}}
                                </div>
                            
                                <div class="row row-cols-1 row-cols-md-2 g-1">
                                    <div class="col d-grid gap-1">
                                        
                                        <div class="row row-cols-1 row-cols-md-2 g-1">

                                            <div class="col d-grid gap-2">
                                                <a role="button" href="../?b={{bldID}}" class="btn btn-primary gap-1">
                                                    Show on Map
                                                </a>
                                            </div>
                                            
                                            <div class="col d-grid gap-1">
                                                <a role="button" href="../info/{{bldID}}" class="btn btn-primary gap-1 {{^infoPageEnabled}}disabled " aria-disabled="true{{/infoPageEnabled}}" >
                                                    Sensory Info
                                                </a>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col d-grid gap-1">
                                        
                                        <div class="row row-cols-1 row-cols-md-2 g-1">
                                            
                                            <div class="col d-grid gap-1">
                                                <a role="button" href="{{PhysicalAccessLink}}" class="btn btn-primary gap-1 {{^Paccess}}disabled " aria-disabled="true{{/Paccess}}">
                                                    Physical Accessibility
                                                </a>
                                            </div>
                                            
                                            <div class="col d-grid gap-1">
                                                <a role="button" href="../map/{{bldID}}" class="btn btn-primary gap-1 {{^mapped}}disabled " aria-disabled="true{{/mapped}}">
                                                    Internal Map
                                                </a>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    {{!-- </div> --}}
                </div>
                {{/buildings.list}}
            </div>
        </div>
        

    
        <!-- Bootstrap bundle, for ?? -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
        
        
        <script>
            // For accordion
            var collapseElementList = [].slice.call(document.querySelectorAll('.collapse'))
            var collapseList = collapseElementList.map(function (collapseEl) {
                return new bootstrap.Collapse(collapseEl)
            });

        </script>

        <script>
            // Fuzzy Search
            const options = {
                includeScore: true,
                keys: [ {name:'buildingName', weight:3},
                        {name:'aka', weight:1},
                        {name:'ZoomedInLabel', weight:1},
                        {name:'ZoomedOutLabel', weight:1}]
            }

            var buildings = [{{#buildings.list}}
            {"buildingName":"{{Name}}",
            "bldID":"{{bldID}}",
            "ZoomedInLabel":"{{ZoomedInLabel}}",
            "ZoomedOutLabel":"{{ZoomedOutLabel}}",
            "aka": "{{aka}}"
            },
            {{/buildings.list}}];

            // Create a new instance of Fuse
            var fuse = new Fuse(buildings, options)

            function buildingSearch() {
                // Declare variables
                var input, li, i; 
                var filter = [];
                input = document.getElementById('searchbar').value;
                li = document.getElementsByClassName('accordion-item');
                
                //Use the static generated Fuse instance to get a list of matches
                let result = fuse.search(input)

                //convert that Fuse instance to an array of IDs for filtering
                for (i = 0; i < result.length; i++){
                    filter.push(result[i].item.bldID);
                }

                // Check there is a result
                // If there's no result and no text in the textbox, show everything except the apology
                //TODO: Add an apology
                if (result.length == 0 && input == ""){

                    //Make everything reappear
                    for (i = 0; i < li.length; i++) {
                        li[i].style.display = "";
                    }
                    //Sort them
                    sortList_byAlphabet();
                    
                }
                else if(result.length == 0){
                    //If the results are 0 but there is a query, then we need to apologise
                }
                else {
                    // If the result is nonzero, then show the returns
                    // Loop through all list items, and hide those who don't match the search query
                    for (i = 0; i < li.length; i++) {

                        
                        if (filter.includes(li[i].id)) {
                            li[i].style.display = "";
                            li[i].dataset.score = result.find(r => r.item.bldID == li[i].id).score.toString();
                        } 
                        else {
                            li[i].style.display = "none";
                        }
                    }

                    //Then loop through again and sort based on scores
                    sortList_byScore();
            
                }

            }

            //Function for sorting list based on data values
            function sortList_byScore() {

                var list, i, switching, b, shouldSwitch;

                list = document.getElementById("buildingsList");
                switching = true;
                /* Make a loop that will continue until
                no switching has been done: */
                while (switching) {
                    // Start by saying: no switching is done:
                    switching = false;
                    b = list.getElementsByClassName("accordion-item");
                    
                    // Loop through all list items:
                        for (i = 0; i < (b.length - 1); i++) {

                            // Start by saying there should be no switching:
                            shouldSwitch = false;

                            /* Check if the next item should
                            switch place with the current item: */
                            if (parseFloat(b[i].dataset.score) > parseFloat(b[i+1].dataset.score)) {

                                /* If next item is alphabetically lower than current item,
                                mark as a switch and break the loop: */
                                shouldSwitch = true;
                                break;
                            }
                        }
                    if (shouldSwitch) {
                    /* If a switch has been marked, make the switch
                    and mark the switch as done: */
                    {{!-- console.log(`Swapping ${b[i].id} and ${b[i+1].id}`) --}}
                    b[i].parentNode.insertBefore(b[i + 1], b[i]);
                    switching = true;
                    }
                }
            }

            //Function for sorting list based on alpabet
            function sortList_byAlphabet() {

                var list, i, switching, b, shouldSwitch;

                list = document.getElementById("buildingsList");
                switching = true;
                /* Make a loop that will continue until
                no switching has been done: */
                while (switching) {
                    // Start by saying: no switching is done:
                    switching = false;
                    b = list.getElementsByClassName("accordion-item");
                    
                    // Loop through all list items:
                        for (i = 0; i < (b.length - 1); i++) {

                            // Start by saying there should be no switching:
                            shouldSwitch = false;

                            /* Check if the next item should
                            switch place with the current item: */
                            if (b[i].id > b[i+1].id) {

                                /* If next item is alphabetically lower than current item,
                                mark as a switch and break the loop: */
                                shouldSwitch = true;
                                break;
                            }
                        }
                    if (shouldSwitch) {
                    /* If a switch has been marked, make the switch
                    and mark the switch as done: */
                    {{!-- console.log(`Swapping ${b[i].id} and ${b[i+1].id}`) --}}
                    b[i].parentNode.insertBefore(b[i + 1], b[i]);
                    switching = true;
                    }
                }
            }

        </script>
        

    </body>

</html>